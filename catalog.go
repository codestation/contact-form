// Code generated by running "go generate" in golang.org/x/text. DO NOT EDIT.

package main

import (
	"golang.org/x/text/language"
	"golang.org/x/text/message"
	"golang.org/x/text/message/catalog"
)

type dictionary struct {
	index []uint32
	data  string
}

func (d *dictionary) Lookup(key string) (data string, ok bool) {
	p, ok := messageKeyToIndex[key]
	if !ok {
		return "", false
	}
	start, end := d.index[p], d.index[p+1]
	if start == end {
		return "", false
	}
	return d.data[start:end], true
}

func init() {
	dict := map[string]catalog.Dictionary{
		"en": &dictionary{index: enIndex, data: enData},
		"es": &dictionary{index: esIndex, data: esData},
	}
	fallback := language.MustParse("en")
	cat, err := catalog.NewFromMap(dict, catalog.Fallback(fallback))
	if err != nil {
		panic(err)
	}
	message.DefaultCatalog = cat
}

var messageKeyToIndex = map[string]int{
	"An error occurred":                                   9,
	"Captcha validation failed":                           15,
	"Email is already registered with another profile":    5,
	"Failed to get profile":                               3,
	"Failed to list profiles":                             4,
	"Failed to read request":                              10,
	"Failed to remove profile":                            8,
	"Failed to save contact":                              16,
	"Failed to save profile":                              6,
	"Failed to send email":                                17,
	"Failed to sign token":                                1,
	"Failed to update profile":                            7,
	"Failed to validate captcha, please try again later.": 14,
	"Invalid username or password":                        0,
	"Profile not found":                                   2,
	"Thanks for contacting us":                            13,
	"The request did not pass validation":                 11,
	"[%s] - New contact":                                  12,
}

var enIndex = []uint32{ // 19 elements
	0x00000000, 0x0000001d, 0x00000032, 0x00000044,
	0x0000005a, 0x00000072, 0x000000a3, 0x000000ba,
	0x000000d3, 0x000000ec, 0x000000fe, 0x00000115,
	0x00000139, 0x0000014f, 0x00000168, 0x0000019c,
	0x000001b6, 0x000001cd, 0x000001e2,
} // Size: 100 bytes

const enData string = "" + // Size: 482 bytes
	"\x02Invalid username or password\x02Failed to sign token\x02Profile not " +
	"found\x02Failed to get profile\x02Failed to list profiles\x02Email is al" +
	"ready registered with another profile\x02Failed to save profile\x02Faile" +
	"d to update profile\x02Failed to remove profile\x02An error occurred\x02" +
	"Failed to read request\x02The request did not pass validation\x02[%[1]s]" +
	" - New contact\x02Thanks for contacting us\x02Failed to validate captcha" +
	", please try again later.\x02Captcha validation failed\x02Failed to save" +
	" contact\x02Failed to send email"

var esIndex = []uint32{ // 19 elements
	0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000015, 0x00000030,
	0x00000055, 0x0000006e, 0x00000087, 0x000000c1,
	0x000000e6, 0x00000102, 0x0000011c,
} // Size: 100 bytes

const esData string = "" + // Size: 284 bytes
	"\x02Ha ocurrido un error\x02Error al leer la petición\x02La petición no " +
	"pasó la validación\x02[%[1]s] - Nuevo contacto\x02Gracias por contactarn" +
	"os\x02Error al validar el captcha, por favor intente mas tarde.\x02La va" +
	"lidación de captcha ha fallado\x02Error al salvar el contacto\x02Error a" +
	"l enviar el correo"

	// Total table size 966 bytes (0KiB); checksum: C8B083
